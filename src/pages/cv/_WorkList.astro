---
export interface Props extends astroHTML.JSX.HTMLAttributes {
	sourceGlob: string;
	name: string;
}

const { sourceGlob, id, name } = Astro.props;
import moment from 'moment';
import WorkEntry from './_WorkEntry.astro';

function momentize(s: string) {
	if (s === 'Present') return moment(Date.now());
	return moment(s, ['MMM YYYY', 'MMMM YYYY']);
}
const items = (await Astro.glob('/**/*.md'))
	.filter(post => post.file.includes(sourceGlob))
	.sort((a, b) => {
		return (
			momentize(b.frontmatter.to).unix() - momentize(a.frontmatter.to).unix()
		);
	});
---

<section>
	<h2>{name}</h2>
	{
		items.map(md => {
			return (
				<WorkEntry
					entry={
						{
							...md.frontmatter,
							description: md.Content,
							from: moment(md.frontmatter.from, ['MMM YYYY', 'MMMM YYYY']),
							to:
								md.frontmatter.to === 'Present'
									? 'Present'
									: moment(md.frontmatter.to, ['MMM YYYY', 'MMMM YYYY']),
							history: md.frontmatter.history?.map(h => ({
								...h,
								from: moment(h.from, ['MMM YYYY', 'MMMM YYYY']),
								to:
									md.frontmatter.to === 'Present'
										? 'Present'
										: moment(h.to, ['MMM YYYY', 'MMMM YYYY']),
							})),
						} as any
					}
				/>
			);
		})
	}
</section>
